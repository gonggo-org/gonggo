direction: right
classes: {
	invoke: {
		style: {
			font-size: 18
			italic: false
			stroke: black
		}	
	}
	proxy: {
		style: {
			fill: "#c9f29b"
			stroke: "#049372"
		}	
	
	}
	shm: {
		style: {
			fill: "#faf4d3"
			stroke: "#bd9b19"
		}
	}
	browser: {
		style: {
			fill: "#f1e7fe"
			stroke: "#663399"
		}
	}
}
CLIENT REQUEST: {
	shape: sequence_diagram
	browser: Browser {class: browser}
	web_socket_server: Web Socket Server
	client_service: Gonggo\nClient Service
	client_reply: Gonggo\nClient Reply
	client_request_table: Client Request\nTable {tooltip: map request-UUID to ClientRequestTableContext}
	client_connection_table: Client Connection\nTable {tooltip: map connection object to request-UUID array}
	client_service_table: Client Service\nTable {tooltip: map request-UUID to service_name_payload json}
	client_proxyname_table: Client Proxy Name\nTable {tooltip: map proxy-name to ClientProxynameTableValue}	
	proxy_channel_thread: Proxy Channel\nThread {class: proxy}
	
	browser -> web_socket_server: request {class: invoke}
	web_socket_server.a -> client_service: dispatch {class: invoke}
	
	ALT: {
		Gonggo Service: {			
			client_service -> client_reply: dispatch {class: invoke}
			client_reply -> web_socket_server: dispatch {class: invoke}
			web_socket_server.a -> browser: reply {class: invoke}
		}
		
		Proxy Service: {			
			client_service.b -> client_request_table: save request id\nand connection {class: invoke}
			client_service.b -> client_connection_table: save connection\nand request id {class: invoke}
			client_service.b -> client_service_table: save request id,\nservice name and payload {class: invoke}
			client_service.b -> client_proxyname_table: save proxy name\nand request id {class: invoke}
			ALT: {
				Proxy Channel Thread available: {
					client_service -> proxy_channel_thread.a: wake up {class: invoke}
					proxy_channel_thread.a."Continue with\nREQUEST PROCESSING"
				}	
			}
		}		
	}	
}